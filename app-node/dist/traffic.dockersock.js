"use strict";
/// <reference path="./typings/main.d.ts" />
var plugins = require("./traffic.plugins");
exports.getContainerData = function () {
    var done = plugins.q.defer();
    plugins.request.get("http://unix:/var/run/docker.sock:/containers/json")
        .on("data", function (data) {
        var dataString = data.toString("utf8");
        var dataObject = JSON.parse(dataString);
        var detailedDataObject = [];
        var recursiveCounter = 0;
        var makeDetailed = function () {
            console.log("dockersock recursion" + recursiveCounter);
            if (typeof dataObject[recursiveCounter] != "undefined") {
                plugins.request.get("http://unix:/var/run/docker.sock:/containers/"
                    + dataObject[recursiveCounter].Id
                    + "/json")
                    .on("data", function () {
                    recursiveCounter++;
                    var dataString = data.toString("utf8");
                    var dataObject = JSON.parse(dataString);
                    detailedDataObject.push(dataObject);
                    makeDetailed();
                });
            }
            else {
                done.resolve(detailedDataObject);
            }
        };
        makeDetailed();
    });
    return done.promise;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYWZmaWMuZG9ja2Vyc29jay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsNENBQTRDO0FBQzVDLElBQU8sT0FBTyxXQUFXLG1CQUFtQixDQUFDLENBQUM7QUFHbkMsd0JBQWdCLEdBQUc7SUFDMUIsSUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUM3QixPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtREFBbUQsQ0FBQztTQUNuRSxFQUFFLENBQUMsTUFBTSxFQUFDLFVBQVMsSUFBSTtRQUNwQixJQUFJLFVBQVUsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZDLElBQUksVUFBVSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDeEMsSUFBSSxrQkFBa0IsR0FBRyxFQUFFLENBQUM7UUFDNUIsSUFBSSxnQkFBZ0IsR0FBRyxDQUFDLENBQUM7UUFDekIsSUFBSSxZQUFZLEdBQUc7WUFDZixPQUFPLENBQUMsR0FBRyxDQUFDLHNCQUFzQixHQUFHLGdCQUFnQixDQUFDLENBQUM7WUFDdkQsRUFBRSxDQUFBLENBQUMsT0FBTyxVQUFVLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxXQUFXLENBQUMsQ0FBQSxDQUFDO2dCQUNuRCxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQywrQ0FBK0M7c0JBQ3pELFVBQVUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLEVBQUU7c0JBQ2hDLE9BQU8sQ0FBQztxQkFDWixFQUFFLENBQUMsTUFBTSxFQUFDO29CQUNQLGdCQUFnQixFQUFFLENBQUM7b0JBQ25CLElBQUksVUFBVSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7b0JBQ3ZDLElBQUksVUFBVSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7b0JBQ3hDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztvQkFDcEMsWUFBWSxFQUFFLENBQUM7Z0JBQ25CLENBQUMsQ0FBQyxDQUFDO1lBQ1gsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNKLElBQUksQ0FBQyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztZQUNyQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDO1FBQ0YsWUFBWSxFQUFFLENBQUM7SUFDbkIsQ0FBQyxDQUFDLENBQUM7SUFDUCxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztBQUN4QixDQUFDLENBQUMiLCJmaWxlIjoidHJhZmZpYy5kb2NrZXJzb2NrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4vdHlwaW5ncy9tYWluLmQudHNcIiAvPlxuaW1wb3J0IHBsdWdpbnMgPSByZXF1aXJlKFwiLi90cmFmZmljLnBsdWdpbnNcIik7XG5pbXBvcnQgVHJhZmZpY0Vudmlyb25tZW50ID0gcmVxdWlyZShcIi4vdHJhZmZpYy5lbnZpcm9ubWVudFwiKTtcblxuZXhwb3J0IGxldCBnZXRDb250YWluZXJEYXRhID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgZG9uZSA9IHBsdWdpbnMucS5kZWZlcigpO1xuICAgIHBsdWdpbnMucmVxdWVzdC5nZXQoXCJodHRwOi8vdW5peDovdmFyL3J1bi9kb2NrZXIuc29jazovY29udGFpbmVycy9qc29uXCIpXG4gICAgICAgIC5vbihcImRhdGFcIixmdW5jdGlvbihkYXRhKXtcbiAgICAgICAgICAgIGxldCBkYXRhU3RyaW5nID0gZGF0YS50b1N0cmluZyhcInV0ZjhcIik7XG4gICAgICAgICAgICBsZXQgZGF0YU9iamVjdCA9IEpTT04ucGFyc2UoZGF0YVN0cmluZyk7XG4gICAgICAgICAgICBsZXQgZGV0YWlsZWREYXRhT2JqZWN0ID0gW107XG4gICAgICAgICAgICBsZXQgcmVjdXJzaXZlQ291bnRlciA9IDA7XG4gICAgICAgICAgICBsZXQgbWFrZURldGFpbGVkID0gZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImRvY2tlcnNvY2sgcmVjdXJzaW9uXCIgKyByZWN1cnNpdmVDb3VudGVyKTtcbiAgICAgICAgICAgICAgICBpZih0eXBlb2YgZGF0YU9iamVjdFtyZWN1cnNpdmVDb3VudGVyXSAhPSBcInVuZGVmaW5lZFwiKXtcbiAgICAgICAgICAgICAgICAgICAgcGx1Z2lucy5yZXF1ZXN0LmdldChcImh0dHA6Ly91bml4Oi92YXIvcnVuL2RvY2tlci5zb2NrOi9jb250YWluZXJzL1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKyBkYXRhT2JqZWN0W3JlY3Vyc2l2ZUNvdW50ZXJdLklkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgK1wiL2pzb25cIilcbiAgICAgICAgICAgICAgICAgICAgICAgIC5vbihcImRhdGFcIixmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY3Vyc2l2ZUNvdW50ZXIrKztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgZGF0YVN0cmluZyA9IGRhdGEudG9TdHJpbmcoXCJ1dGY4XCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBkYXRhT2JqZWN0ID0gSlNPTi5wYXJzZShkYXRhU3RyaW5nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXRhaWxlZERhdGFPYmplY3QucHVzaChkYXRhT2JqZWN0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYWtlRGV0YWlsZWQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGRvbmUucmVzb2x2ZShkZXRhaWxlZERhdGFPYmplY3QpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBtYWtlRGV0YWlsZWQoKTtcbiAgICAgICAgfSk7XG4gICAgcmV0dXJuIGRvbmUucHJvbWlzZTtcbn07Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
